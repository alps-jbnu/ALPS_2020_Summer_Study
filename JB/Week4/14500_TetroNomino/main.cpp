#include <bits/stdc++.h>
using namespace std;
const int block[][4][2] = {
	{{0,0},{0,1},{0,2},{0,3}},
	{{0,0},{1,0},{2,0},{3,0}},
	{{0,0},{0,1},{1,0},{1,1}},
	{{1,0},{1,1},{0,1},{1,2}},
	{{0,0},{1,0},{2,0},{1,1}},
	{{0,0},{0,1},{0,2},{1,1}},
	{{1,0},{1,1},{0,1},{2,1}},
	{{0,0},{1,0},{2,0},{2,1}},
	{{0,0},{1,0},{0,1},{0,2}},
	{{0,0},{0,1},{1,1},{2,1}},
	{{1,0},{1,1},{1,2},{0,2}},
	{{2,0},{2,1},{1,1},{0,1}},
	{{0,0},{1,0},{1,1},{1,2}},
	{{0,0},{0,1},{1,0},{2,0}},
	{{0,0},{0,1},{0,2},{1,2}},
	{{0,0},{1,0},{1,1},{2,1}},
	{{1,0},{1,1},{0,1},{0,2}},
	{{0,1},{1,0},{1,1},{2,0}},
	{{0,0},{0,1},{1,1},{1,2}}
};
int board[501][501];
int ans;
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);

	int N, M;
	cin >> N >> M;
	for (int y = 0; y < N; y++) {
		for (int x = 0; x < M; x++) {
			cin >> board[y][x];
		}
	}

	for (int y = 0; y < N; y++) {
		for (int x = 0; x < M; x++) {
			for (int idx = 0; idx < 19; idx++) {
				int i, sum = 0;
				for (i = 0; i < 4; i++) {
					int nx = x + block[idx][i][0];
					int ny = y + block[idx][i][1];
					if (nx < 0 || ny < 0 || nx >= M || ny >= N)
						break;
					sum += board[ny][nx];
				}
				if (i != 4)
					continue;
				ans = max(ans, sum);
			}
		}
	}
	cout << ans;
}
